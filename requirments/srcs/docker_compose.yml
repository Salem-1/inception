version: '3'
services:
  nginx:
    build:
      context: srcs/requirments/nginx
    image: nginx
    init: true 
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - WordPress:/usr/share/nginx/html/
    networks:
      - word_press_network
    restart: on-failure
#---------------------------------------------------------------------
  # mariadb:
  #   build:
  #     context: srcs/requirments/mariadb
  #     args:
  #       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #       MYSQL_USER: ${MYSQL_USER}
  #       MYSQL_DATABASE: ${MYSQL_DATABASE}
  #       ADMIN: ${ADMIN}
  #       ADMIN_PASSWORD: ${ADMIN_PASSWORD}
  #   env_file:
  #     - .env
  #   image: mariadb
  #   init: true
  #   container_name: mariadb
  #   volumes:
  #     - DB:/var/lib/mysql
  #   networks:
  #     - word_press_network
  #   restart: on-failure
#-----------------------------------------------------------------------------
  # wordpress:
  #   build:
  #     context: srcs/requirments/wordpress/.
  #     args:
  #       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #       MYSQL_USER: ${MYSQL_USER}
  #       MYSQL_DATABASE: ${MYSQL_DATABASE}
  #       ADMIN: ${ADMIN}
  #       ADMIN_PASSWORD: ${ADMIN_PASSWORD}
  #   env_file:
  #     - .env
  #   image: wordpress
  #   init: true
  #   container_name: wordpress
  #   volumes:
  #     - WordPress:/var/www/html/.
  #   networks:
  #     - word_press_network
  #   restart: on-failure

    #-----------------------------------------------------------------
volumes:
  DB:
    driver: local
    name: DB
    driver_opts:
      type: bind
      o: bind
      device: /home/ahsalem/data/DB
    
  WordPress:
    driver: local
    name: WordPress
    driver_opts:
      type: bind
      o: bind
      device: /home/ahsalem/data/wordpress/

networks: 
  word_press_network:




      #THis will protect anyting else to connect to mariadb
      #till wordpress ready
      # healthcheck:
      # #modify this command below
      #  test: ["CMD", "mysqladmin", "ping", "sample command"]
        #  timeout: 5s